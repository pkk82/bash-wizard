# gp - git pull
alias gp='git pull'

# gs - git status
alias gs='git status'

# gt <tag> - git tag <tag>
alias gt='git tag'

# gtd <tag> - git tag --delete <tag>
alias gtd='git tag --delete'

# gf - git fetch
alias gf='git fetch'

# gpo - git push origin <current branch>
alias gpo='git push origin $(git rev-parse --abbrev-ref HEAD 2>/dev/null)'

# gpo1 - git push origin HEAD~1:refs/heads/<current branch>
alias gpo1='git push origin HEAD~1:refs/heads/$(git rev-parse --abbrev-ref HEAD 2>/dev/null)'\

# gpo2 - git push origin HEAD~2:refs/heads/<current branch>
alias gpo2='git push origin HEAD~2:refs/heads/$(git rev-parse --abbrev-ref HEAD 2>/dev/null)'

# gpo3 - git push origin HEAD~3:refs/heads/<current branch>
alias gpo3='git push origin HEAD~3:refs/heads/$(git rev-parse --abbrev-ref HEAD 2>/dev/null)'

# gpo4 - git push origin HEAD~4:refs/heads/<current branch>
alias gpo4='git push origin HEAD~4:refs/heads/$(git rev-parse --abbrev-ref HEAD 2>/dev/null)'

# gpo5 - git push origin HEAD~5:refs/heads/<current branch>
alias gpo5='git push origin HEAD~5:refs/heads/$(git rev-parse --abbrev-ref HEAD 2>/dev/null)'

# gpot - git push origin --tags
alias gpot='git push origin --tags'

# gppo - git pull && git push origin <current branch>
alias gppo='git pull && git push origin $(git rev-parse --abbrev-ref HEAD)'

# gpgh - git push gh <current branch>
alias gpgh='git push gh $(git rev-parse --abbrev-ref HEAD 2>/dev/null)'

# gpbb - git push bb <current branch>
alias gpbb='git push bb $(git rev-parse --abbrev-ref HEAD 2>/dev/null)'

# gc <branch> - git checkout <branch>
alias gc='git checkout'

# gcb <branch> - git checkout -b <branch>
alias gcb='git checkout -b'

# gb - git branch
alias gb='git branch'

# gbv - git branch -v
alias gbv='git branch -v'

# gbd <branch> - git branch -D <branch>
alias gbd='git branch -D'

# gbm - git branch --merged
alias gbm='git branch --merged'

# gbsuto - git branch --set-upstream-to=origin/<branch> <branch>
function gbsuto() {
  local branch
  if [[ "$(g-c)" == "1" ]]; then
    branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
    git branch --set-upstream-to="origin/$branch" "$branch"
  else
    echo "Not inside a git repository."
  fi
}

# gl1 - git log --oneline -n 1
alias gl1='git log --oneline -n 1'

# gl2 - git log --oneline -n 2
alias gl2='git log --oneline -n 2'

# gl3 - git log --oneline -n 3
alias gl3='git log --oneline -n 3'

# gl4 - git log --oneline -n 4
alias gl4='git log --oneline -n 4'

# gl5 - git log --oneline -n 5
alias gl5='git log --oneline -n 5'

# gl6 - git log --oneline -n 6
alias gl6='git log --oneline -n 6'

# gl7 - git log --oneline -n 7
alias gl7='git log --oneline -n 7'

# gl8 - git log --oneline -n 8
alias gl8='git log --oneline -n 8'

# gl9 - git log --oneline -n 9
alias gl9='git log --oneline -n 9'

# gri1 - git rebase -i HEAD~1
alias gri1='git rebase -i HEAD~1'

# gri2 - git rebase -i HEAD~2
alias gri2='git rebase -i HEAD~2'

# gri3 - git rebase -i HEAD~3
alias gri3='git rebase -i HEAD~3'

# gri4 - git rebase -i HEAD~4
alias gri4='git rebase -i HEAD~4'

# gri5 - git rebase -i HEAD~5
alias gri5='git rebase -i HEAD~5'

# gri6 - git rebase -i HEAD~6
alias gri6='git rebase -i HEAD~6'

# gri7 - git rebase -i HEAD~7
alias gri7='git rebase -i HEAD~7'

# gri8 - git rebase -i HEAD~8
alias gri8='git rebase -i HEAD~8'

# gri9 - git rebase -i HEAD~9
alias gri9='git rebase -i HEAD~9'

# grv - git remote -v
alias grv='git remote -v'

# g-c - check if inside git repository, "1" inside, "0" outside
function g-c() {
  if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    echo "1"
  else
    echo "0"
  fi
}

# g-cb - display current branch
function g-cb() {
  git rev-parse --abbrev-ref HEAD
}

# g-mb - display main branch
function g-mb() {
  git remote show origin | sed -n '/HEAD branch/s/.*: //p'
}

# gcm - git checkout <main branch>
function gcm() {
  if [[ "$(g-c)" == "1" ]]; then
    git checkout "$(g-mb)"
  else
    echo "Not inside a git repository."
  fi
}

# gcmp - git checkout <main branch> && git pull
function gcmp() {
  if [[ "$(g-c)" == "1" ]]; then
      git checkout "$(g-mb)"
      git pull
    else
      echo "Not inside a git repository."
    fi
}

# grom - git rebase origin/<main-branch>
function grom() {
  if [[ "$(g-c)" == "1" ]]; then
    git rebase "origin/$(g-mb)"
  else
    echo "Not inside a git repository."
  fi
}

# gmom - git merge origin/<main-branch>
function gmom() {
  if [[ "$(g-c)" == "1" ]]; then
    git merge "origin/$(g-mb)"
  else
    echo "Not inside a git repository."
  fi
}

# gbdm - remove merged branches
function gbdm() {
  if [[ "$(g-c)" == "1" ]]; then
    b=$(g-cb)
    mb=$(g-mb)
    confirm="y"

    if [[ "$b" != "$mb" ]]; then
      echo "You are not on the main branch."
      echo -n "Do you want to continue? (y/n): "
      read -r confirm
    fi

    if [[ "$confirm" =~ ^[Yy]$ ]]; then
      mergedBranches=$(git branch --merged | grep -vE "(\*|$mb)")
      if [[ "$mergedBranches" == "" ]]; then
        echo "No branches to remove."
      else
        echo "$mergedBranches" | xargs git branch -d
      fi
    fi
  else
    echo "Not inside a git repository."
  fi
}

# gsr1 - git reset --soft HEAD~1
alias gsr1='git reset --soft HEAD~1'

# gsr2 - git reset --soft HEAD~2
alias gsr2='git reset --soft HEAD~2'

# gsr3 - git reset --soft HEAD~3
alias gsr3='git reset --soft HEAD~3'

# gsr4 - git reset --soft HEAD~4
alias gsr4='git reset --soft HEAD~4'

# gsr5 - git reset --soft HEAD~5
alias gsr5='git reset --soft HEAD~5'

# gsr6 - git reset --soft HEAD~6
alias gsr6='git reset --soft HEAD~6'

# gsr7 - git reset --soft HEAD~7
alias gsr7='git reset --soft HEAD~7'

# gsr8 - git reset --soft HEAD~8
alias gsr8='git reset --soft HEAD~8'

# gsr9 - git reset --soft HEAD~9
alias gsr9='git reset --soft HEAD~9'

# ghr1 - git reset --hard HEAD~1
alias ghr1='git reset --hard HEAD~1'

# ghr2 - git reset --hard HEAD~2
alias ghr2='git reset --hard HEAD~2'

# ghr3 - git reset --hard HEAD~3
alias ghr3='git reset --hard HEAD~3'

# ghr4 - git reset --hard HEAD~4
alias ghr4='git reset --hard HEAD~4'

# ghr5 - git reset --hard HEAD~5
alias ghr5='git reset --hard HEAD~5'

# ghr6 - git reset --hard HEAD~6
alias ghr6='git reset --hard HEAD~6'

# ghr7 - git reset --hard HEAD~7
alias ghr7='git reset --hard HEAD~7'

# ghr8 - git reset --hard HEAD~8
alias ghr8='git reset --hard HEAD~8'

# ghr9 - git reset --hard HEAD~9
alias ghr9='git reset --hard HEAD~9'

