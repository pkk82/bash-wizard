# mci - mvn clean install
alias mci='mvn clean install'

# mcv - mvn clean verify
alias mcv='mvn clean verify'

# mcp - mvn clean package
alias mcp='mvn clean package'

# mcc - mvn clean compile
alias mcc='mvn clean compile'

# mctc - mvn clean test-compile
alias mctc='mvn clean test-compile'

# mct - mvn clean test
alias mct='mvn clean test'

# mcist - mvn clean install -DskipTests
alias mcist='mvn clean install -DskipTests -DskipUnitTests -DskipIntegrationTests'

# mcpst - mvn clean package -DskipTests
alias mcpst='mvn clean package -DskipTests -DskipUnitTests -DskipIntegrationTests'

# mi - mvn install
alias mi='mvn install'

# mve - mvn verify
alias mve='mvn verify'

# mp - mvn package
alias mp='mvn package'

# mc - mvn compile
alias mc='mvn compile'

# mtc - mvn test-compile
alias mtc='mvn test-compile'

# mt - mvn test
alias mt='mvn test'

# mist - mvn install -DskipTests
alias mist='mvn install -DskipTests -DskipUnitTests -DskipIntegrationTests'

# mpst - mvn package -DskipTests
alias mpst='mvn package -DskipTests -DskipUnitTests -DskipIntegrationTests'

# mw <version> - mvn wrapper:wrapper -Dmaven=<version>
function mw() {
  if [[ "$1" == "" ]]; then
    mvn wrapper:wrapper
  else
    mvn wrapper:wrapper -Dmaven="$1"
  fi
}

# mej - launch compiled class using maven exec plugin, pass term matching main class as first argument and arguments to main class as subsequent ones
function mej() {
  local term

  if [[ "$1" == "" ]]; then
    echo "Use: mej <main class term> <arguments>"
    return 1
  fi

  term="${1//./_}"
  classFiles=$(find . -type f -name "$term*.class")
  if [[ "$classFiles" == "" ]]; then
    classFiles=$(find . -type f -name "_$term*.class")
  fi
  if [[ "$classFiles" == "" ]]; then
    classFiles=$(find . -type f -name "*$term*.class")
  fi
  if [[ "$classFiles" == "" ]]; then
    echo "Classes not found - did you compile your project?"
    return 1
  fi
  for classFile in $classFiles; do
      className=$(echo "$classFile" | sed 's/.*\/target\/classes\///g' | sed 's/\.class//g' | sed 's/\//\./g')
      path=$(echo "$classFile" | sed 's/\/target\/classes\/.*//g')
      if [[ "$className" == *'$'* ]]; then
        continue
      fi
      echo ""
      echo "Launching $className"
      echo ""
      mvn --quiet exec:java -Dexec.mainClass="$className" -Dexec.args="${*:2}" -f "$path/pom.xml"
      break
  done
}

# meja - launch all compiled class using maven exec plugin, pass term matching main class as first argument and arguments to main class as subsequent ones
function meja() {
  local term

  if [[ "$1" == "" ]]; then
    echo "Use: meja <main class term> <arguments>"
    return 1
  fi

  term="${1//./_}"
  classFiles=$(find . -type f -name "*$term*.class")
  if [[ "$classFiles" == "" ]]; then
    echo "Classes not found - did you compile your project?"
    return 1
  fi
  for classFile in $classFiles; do
      className=$(echo "$classFile" | sed 's/.*\/target\/classes\///g' | sed 's/\.class//g' | sed 's/\//\./g')
      path=$(echo "$classFile" | sed 's/\/target\/classes\/.*//g')
      if [[ "$className" == *'$'* ]]; then
        continue
      fi
      echo ""
      echo "Launching $className"
      echo ""
      mvn --quiet exec:java -Dexec.mainClass="$className" -Dexec.args="${*:2}" -f "$path/pom.xml"
  done
}

# mejaa - launch all compiled class using maven exec plugin, pass arguments to main classes as subsequent ones
function mejaa() {
  classFiles=$(find . -type f -name "*$term*.class")
  if [[ "$classFiles" == "" ]]; then
    echo "Classes not found - did you compile your project?"
    return 1
  fi
  for classFile in $classFiles; do
      main1=$(javap "$classFile" | grep "public static void main(java.lang.String\[\])" 2>&1)
      main2=$(javap "$classFile" | grep "public static final void main(java.lang.String\[\])" 2>&1)
      className=$(echo "$classFile" | sed 's/.*\/target\/classes\///g' | sed 's/\.class//g' | sed 's/\//\./g')
      path=$(echo "$classFile" | sed 's/\/target\/classes\/.*//g')
      if [[ "$main1" == "" ]] && [[ "$main2" == "" ]]; then
        continue
      fi
      echo ""
      echo "Launching $className"
      echo ""
      mvn --quiet exec:java -Dexec.mainClass="$className" -Dexec.args="${*:2}" -f "$path/pom.xml"
  done
}
